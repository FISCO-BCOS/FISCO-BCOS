name: Github runner
on:
  push:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  release:
    types: [published]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, macos-15, windows-2022]
    steps:
      - uses: actions/checkout@v3
        with:
          clean: false
      - name: Set up JDK 1.8
        if: matrix.os != 'windows-2022'
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "8.0.382"
      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.28.3
          ninjaVersion: 1.12.1
      - name: Restore vcpkg cache
        uses: actions/cache@v4
        id: vcpkg-cache
        with:
          path: |
            ${{ github.workspace }}/vcpkg
            ${{ github.workspace }}/build/vcpkg_installed
            !${{ github.workspace }}/vcpkg/.git
            !${{ github.workspace }}/vcpkg/buildtrees
            !${{ github.workspace }}/vcpkg/packages
            !${{ github.workspace }}/vcpkg/downloads
          key: vcpkg-${{ hashFiles( 'vcpkg.json' ) }}-${{ hashFiles( 'vcpkg-configuration.json' ) }}-${{ runner.os }}-${{ runner.arch }}-cache-key-v1
      - name: Set up Node.js 20
        if: matrix.os != 'windows-2022'
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install linux dependencies
        if: matrix.os == 'ubuntu-24.04' || matrix.os == 'ubuntu-24.04-arm'
        run: |
          sudo apt update
          sudo apt install -y lcov wget python3-dev python3-pip git curl zip unzip tar
          sudo apt install -y --no-install-recommends \
              clang make build-essential libssl-dev zlib1g-dev ca-certificates mold autoconf \
              libgmp-dev flex bison patch libzstd-dev ninja-build pkg-config uuid-runtime automake gcc-14 g++-14
      - name: Install macOS dependencies
        if: matrix.os == 'macos-15'
        run: brew install libomp gmp
      - name: Add MSbuild to PATH
        if: matrix.os == 'windows-2022'
        uses: microsoft/setup-msbuild@v1.1
      - uses: actions-rs/toolchain@v1
        if: matrix.os != 'windows-2022'
        with:
          toolchain: nightly-2024-02-25
          override: true
      - name: Configure for linux
        if: matrix.os == 'ubuntu-24.04' || matrix.os == 'ubuntu-24.04-arm'
        run: |
          mkdir -p build
          cd build
          CC=gcc-14 CXX=g++-14 cmake -DCMAKE_BUILD_TYPE=Release -DLINKER=mold -DTESTS=ON -DCOVERAGE=OFF -DWITH_LIGHTNODE=ON -DWITH_CPPSDK=ON -DWITH_TIKV=OFF -DWITH_TARS_SERVICES=OFF ..
      - name: Configure for macOS
        if: matrix.os == 'macos-15'
        run: |
          export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
          mkdir -p build
          cd build && CC=/usr/bin/clang CXX=/usr/bin/clang++ cmake -DCMAKE_BUILD_TYPE=Release -DTESTS=ON -DCOVERAGE=OFF -DWITH_LIGHTNODE=ON -DWITH_CPPSDK=ON -DWITH_TIKV=OFF -DWITH_TARS_SERVICES=OFF ..
      - name: Configure for windows
        if: matrix.os == 'windows-2022'
        run: |
          mkdir build -Force
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DALLOCATOR=default -DTESTS=OFF -DFULLNODE=OFF -DWITH_LIGHTNODE=OFF -DWITH_TARS_SERVICES=OFF -DWITH_CPPSDK=ON -DWITH_WASM=OFF -DWITH_TIKV=OFF -DVCPKG_TARGET_TRIPLET=x64-windows-static ..
      - name: Build
        run: |
          cd build
          cmake --build . --parallel 3
      - name: Test
        if: matrix.os != 'windows-2022'
        run: |
          cd build
          CTEST_OUTPUT_ON_FAILURE=TRUE ctest
      - name: prepare RPCAPI Tests
        if: matrix.os != 'windows-2022'
        run: |
          cd tools
          bash .ci/rpcapi_ci_prepare.sh
      - name: FISCO BCOS RpcApiTest
        if: matrix.os != 'windows-2022'
        uses: matt-ball/newman-action@v1.0.4
        with:
          collection: https://raw.githubusercontent.com/FISCO-BCOS/FISCOBCOS-RPC-API/main/fiscobcos.rpcapi.collection.json
      - name: Integration test - Air
        if: matrix.os != 'windows-2022' && matrix.os != 'macos-15'
        run: |
          cd tools
          bash .ci/ci_check_air.sh ${{ github.base_ref }} "true"