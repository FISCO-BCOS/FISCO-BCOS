name: Arm CI Check
on:
  push:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  release:
    types: [push]

env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
  ACTIONS_RUNNER_FORCED_INTERNAL_NODE_VERSION: node16
  ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_arm:
    name: arm ci check
    runs-on: self-hosted-arm
    strategy:
      fail-fast: false
    env:
      VCPKG_ROOT: ~/cache/vcpkg
      DEPS_ROOT: ~/cache/deps
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      ACTIONS_RUNNER_FORCED_INTERNAL_NODE_VERSION: node16
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
    steps:
      - name: Set up Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - uses: actions/checkout@v3
        with:
          clean: false

      - name: Prepare centos tools
        run: |
          sudo yum install -y epel-release centos-release-scl flex bison patch gmp-static java glibc-static glibc-devel libzstd-devel java-1.8.0-openjdk-devel.aarch64
          sudo yum install -y devtoolset-10 llvm-toolset-7.0 rh-perl530-perl zlib-devel ccache lcov python-devel python3-devel python3-pip automake
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-02-25
          override: true

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "8.0.382"

      - name: Reuse build cache
        run: |
          mkdir -p ./build
          rm -rf deps
          ln -s ${{ env.DEPS_ROOT }} deps

      - name: Remove cache if correspond dir change
        run: ./tools/.ci/clear_build_cache.sh
      - name: update vcpkg
        run: |
          cd vcpkg && git fetch origin master
          cd -

      - name: Build for linux
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          . /opt/rh/rh-perl530/enable
          export LIBCLANG_PATH=/opt/rh/llvm-toolset-7.0/root/lib64/
          . /opt/rh/llvm-toolset-7.0/enable
          mkdir -p build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DTESTS=ON -DWITH_CPPSDK=ON -DWITH_TARS_SERVICES=ON -DLINKER=gold -DWITH_TIKV=OFF -DWITH_TARS_SERVICES=ON .. || cat *.log
          make -j8
      - name: Test
        run: cd build && CTEST_OUTPUT_ON_FAILURE=TRUE make test

      - name: prepare RPCAPI Tests
        run: cd tools && bash .ci/rpcapi_ci_prepare.sh

      - name: FISCO BCOS RpcApiTest
        uses: matt-ball/newman-action@v1.0.4
        with:
          collection: https://raw.githubusercontent.com/FISCO-BCOS/FISCOBCOS-RPC-API/main/fiscobcos.rpcapi.collection.json

      - name: Integration test - Air
        run: cd tools && bash .ci/ci_check_air.sh ${{ github.base_ref }}
      - name: Integration test - Pro
        run: cd tools && bash .ci/ci_check_pro.sh ${{ github.base_ref }}
