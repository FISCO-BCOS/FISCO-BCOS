name: Ubuntu CI Check
on:
  push:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  release:
    types: []
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
env:
  ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true

jobs:
  build_ubuntu:
    name: ubuntu ci check
    runs-on: self-hosted-ubuntu
    strategy:
      fail-fast: false
    env:
      VCPKG_ROOT: /home/ci/cache/vcpkg
      DEPS_ROOT: /home/ci/cache/deps
    steps:
      - uses: actions/checkout@v3
        with:
          clean: false
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "8.0.382"

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: apt install
        run: |
          sudo apt update
          sudo apt install -y  lcov ccache wget python3-dev python3-pip git curl zip unzip tar
          sudo apt install -y --no-install-recommends \
              clang make build-essential cmake libssl-dev zlib1g-dev ca-certificates mold \
              libgmp-dev flex bison patch libzstd-dev ninja-build pkg-config ccache uuid-runtime automake

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-02-25
          override: true

      - name: Reuse build cache
        run: |
          mkdir -p ./build
          rm -rf deps
          ln -s ${{ env.DEPS_ROOT }} deps

      - name: Remove cache if correspond dir change
        run: ./tools/.ci/clear_build_cache.sh

      - name: update vcpkg
        run: |
          cd ${{ env.VCPKG_ROOT }} && git fetch --all && git checkout master && git pull && ./bootstrap-vcpkg.sh
          cd -

      - name: Build for linux
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          unset VCPKG_FORCE_SYSTEM_BINARIES
          cd build && cmake -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLINKER=mold -DTESTS=ON -DCOVERAGE=OFF -DWITH_LIGHTNODE=ON -DWITH_CPPSDK=ON -DWITH_TIKV=ON -DWITH_TARS_SERVICES=OFF -DTOOLS=ON .. || cat *.log
          make -j6
      - name: Test
        run: |
          export PATH=/home/ci/.tiup/bin/:$PATH
          cat /home/ci/.bashrc
          curl --proto '=https' --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh | sh
          source /home/ci/.bashrc
          tiup update --self && tiup update playground
          tiup install playground tikv:v6.5.9 pd:v6.5.9
          nohup tiup playground v6.5.9 --mode tikv-slim --without-monitor &
          sleep 30 && cd build && CTEST_OUTPUT_ON_FAILURE=TRUE ctest

      - name: prepare RPCAPI Tests
        run: cd tools && bash .ci/rpcapi_ci_prepare.sh

      - name: FISCO BCOS RpcApiTest
        uses: matt-ball/newman-action@v1.0.4
        with:
          collection: https://raw.githubusercontent.com/FISCO-BCOS/FISCOBCOS-RPC-API/main/fiscobcos.rpcapi.collection.json

      - name: Integration test - Air
        run: cd tools && bash .ci/ci_check_air.sh ${{ github.base_ref }} "true"
#      - name: Integration test - Pro
#        run: cd tools && bash .ci/ci_check_pro.sh ${{ github.base_ref }}
